Moi file co the co nhieu init function. Dung de verify hoac repair 1 CT truoc khi no execute thuc su
gin.Context la phan quan trong nhat cua Gin FW, mang theo request chi tiet, validate va serialize JSON,...
go1.18rc1 de run cac cmd ver nay
go get . => lay dependency cho code cua duong dan hien tai
Workspace la  1 khong gian lam viec, ket noi cac module lai voi nhau, co the goi cac module khac tu noi nay
Dung o dir workspace: go work init <path_module>
go work use <path_module>

Package:
errors => loi
log
os => lam viec voi file
net/http => lam viec voi http
fmt => cac ham print
regexp => regex
github.com/gin-gonic/gin => gin fw

Moi bien khi khai bao deu co dia chi rieng va gia tri dang luu tru. Dau "&"<ten bien> de xem dia chi bien
Con tro "*"<ten bien>
p = &value => p la dia chi, &value la dia chi
*p = value => p la gia tri, value la gia tri
p = &A{x,y} => &{x,y},A type struct
func (p *Page) seen() => day la cach dung con tro trong func name "seen" ma khong can dung p *Page la argument
Khong them su dung argument co con tro phia truoc argument khong co con tro
VD: func a(a *p, b z) => sai
func b(b z, a *p)

Chi su dung var interface trong generic function cho parameter
request.FormValue(<name_field>) tra ve gia tri cua form POST, GET

De su dung rand.Intn() return random number thi phai khai bao rand.Seed(time.Now().UnixNano()) trong func init()

Ten viet hoa chu cai dau tien(VD Name, Pi()) la ten duoc export. Khi import package thi phai
su dung cac ten, func duoc export

%T la tuong ung type, hay  dung trong Printf
%v la tuong ung voi var(int, float, boolean), func
%q cho type string

Type
bool
string
int int8 int16 int32 int64
uint uint8 uint 16 uint32 uint64 uintptr
byte    // alias cua uint8
run     // alias cua int32, dai dien cho 1 diem ma Unicode
float32 float64
complex64 complex128    // so phuc

Vong lap for dung ";",
Menh de if dung ";", truoc dk co the co 1 menh de
VD: if v:= a(); v < x
switch...case cung xai ";" tuong tu

Defer: sd trong dieu khien thread, cho phep cau lenh duoc goi khong thuc thi ngay ma hoan lai
cho toi khi cac lenh xung quanh tra ve ket qua

Slice la 1 mang co size thay doi tu dong, slice khong luu data, no chi mo ta 1 phan cua mang
slice bi gioi han boi a[low:high bound] => cat tu mang a vi tri low -> high
Gia tri 0 cua slice la nil, len 0, capacity 0

Range continued:
Bo qua index hoac value bang dau "_"
for i, _ := range pow
for _, value := range pow
Chi can index
for i := range pow

make(type, so phan tu) tao 1 slice
make return map(cap key-value) 

Method
type A struct{
    X, Y <type>
}
func (v A) a <type> {
    ...
}
var co struct A co the truy cap func a()

Construct
type A struct {
    ...
}
None construct
type A <type> => type float,int,...

Khi goi func co pointer, ta can truyen vao dia chi, vd a := &A, func(a)

Inteface la 1 tap hop cac method dac trung

Method la function co receiver argument phia truoc
VD: func (v Vertext)Abs() int64{...}
Method chi la function khi co receiver argument
VD: func Abs(v Vertext) int64{...}
Khong the nhan func a(argument){...} trong pointer ma chi nhan receiver arg